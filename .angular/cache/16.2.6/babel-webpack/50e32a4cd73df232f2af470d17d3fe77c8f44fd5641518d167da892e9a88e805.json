{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class LivreGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.authService.isAdmin()) return true;else {\n      this.router.navigate(['app-forbidden']);\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function LivreGuard_Factory(t) {\n    return new (t || LivreGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LivreGuard,\n    factory: LivreGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["LivreGuard","constructor","authService","router","canActivate","route","state","isAdmin","navigate","_","i0","ɵɵinject","i1","AuthService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["D:\\2éme annéé\\s1\\angular\\bibliotheque\\src\\app\\livre.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from './services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LivreGuard implements CanActivate { // Changed guard name\n  constructor(private authService: AuthService,\n    private router: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    if (this.authService.isAdmin())\n      return true;\n    else {\n      this.router.navigate(['app-forbidden']);\n      return false;\n    }\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,UAAU;EACrBC,YAAoBC,WAAwB,EAClCC,MAAc;IADJ,KAAAD,WAAW,GAAXA,WAAW;IACrB,KAAAC,MAAM,GAANA,MAAM;EAAY;EAC5BC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,IAAI,IAAI,CAACJ,WAAW,CAACK,OAAO,EAAE,EAC5B,OAAO,IAAI,CAAC,KACT;MACH,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;MACvC,OAAO,KAAK;;EAEhB;EAAC,QAAAC,CAAA,G;qBAZUT,UAAU,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVhB,UAAU;IAAAiB,OAAA,EAAVjB,UAAU,CAAAkB,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}